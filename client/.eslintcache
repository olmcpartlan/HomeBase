[{"/Users/owenmcpartlan/Desktop/programs/cpp/HomeBase/client/src/index.js":"1","/Users/owenmcpartlan/Desktop/programs/cpp/HomeBase/client/src/reportWebVitals.js":"2","/Users/owenmcpartlan/Desktop/programs/cpp/HomeBase/client/src/App.js":"3","/Users/owenmcpartlan/Desktop/programs/cpp/HomeBase/client/src/Components/FileContainer.js":"4","/Users/owenmcpartlan/Desktop/programs/cpp/HomeBase/client/src/Components/FileElements.js":"5"},{"size":501,"mtime":1610501903615,"results":"6","hashOfConfig":"7"},{"size":362,"mtime":1610228331961,"results":"8","hashOfConfig":"7"},{"size":2247,"mtime":1611367478772,"results":"9","hashOfConfig":"7"},{"size":2242,"mtime":1611423625031,"results":"10","hashOfConfig":"7"},{"size":1221,"mtime":1611281444931,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"8h71ip",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"25"},"/Users/owenmcpartlan/Desktop/programs/cpp/HomeBase/client/src/index.js",[],["26","27"],"/Users/owenmcpartlan/Desktop/programs/cpp/HomeBase/client/src/reportWebVitals.js",[],"/Users/owenmcpartlan/Desktop/programs/cpp/HomeBase/client/src/App.js",[],"/Users/owenmcpartlan/Desktop/programs/cpp/HomeBase/client/src/Components/FileContainer.js",["28","29","30","31","32","33"],"import React, { Component, useImperativeHandle } from 'react';\nimport { spacing } from '@material-ui/system/spacing'; \nimport Grid from '@material-ui/core/Grid';\nimport { DirectoryElement, FileElement } from './FileElements';\n\n\nexport default class FileContainer extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      files: this.props.files\n    }\n  }\n\n  updatePathForward(selectedDirectory) {\n    this.props.updatePathForward(selectedDirectory)\n  }\n\n  mapElements(elements, directoryPath) {\n    return (\n      <Grid container className=\"element-container\" >\n        {/* Filepath breadcrumbs. */}\n        <Grid container justify='center' >\n          { directoryPath.split('/').map((element, i) => {\n            return <Grid item key={i}>\n              <a onClick={() => this.props.updatePathBackward(element)} href='javascript:void(0)' className='file-path'>{element}</a>\n              {i !== directoryPath.split('/').length - 1\n                ? <span className='file-path-separator'>/</span>\n                : <span></span>\n              }\n\n            </Grid>\n          })} \n\n        </Grid>\n        <Grid \n          container \n          alignContent='flex-start'\n          className=\"element-body\"\n          >\n          {elements.map((element, i) => {\n            {/* xs = 3 will allow four items on each row */}\n            return <Grid \n                    item \n                    xs={3} \n                    style={{marginTop:40}} \n                    className=\"element-entry\" \n                    key={i} >\n              {/* Check what type of sytling to use for element */}\n              {element[1]['file-type'] === 'directory'\n                ? <DirectoryElement updatePathForward={this.updatePathForward.bind(this)} directory={element} />\n                : <FileElement file={element} />\n              }\n            </Grid>\n          })}\n        </Grid>\n      </Grid>\n    );\n\n  }\n\n\n  render() {\n    const dirPath = this.state.files['directory-path'];\n    const elements = Object.entries(this.state.files['elements']);\n    return (\n      <Grid container >\n        {elements != undefined\n          ? this.mapElements(elements, dirPath)\n          : <p></p>\n        }\n      </Grid>\n\n    );\n  }\n\n\n}\n\n","/Users/owenmcpartlan/Desktop/programs/cpp/HomeBase/client/src/Components/FileElements.js",["34","35","36"],"\nimport React, { Component } from 'react';\nimport DescriptionIcon from '@material-ui/icons/Description';\nimport FolderIcon from '@material-ui/icons/Folder';\nimport Grid from '@material-ui/core/Grid';\n\nclass FileElement extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    const file = this.props.file;\n    return (\n      <Grid item className=\"grid-item\" >\n        <DescriptionIcon className=\"file-icon\" className=\"element-icon\"/>\n        <p>{file[1]['file-name']}</p>\n        <p className='file-size'><small>{file[1]['file-size']} bytes</small></p>\n      </Grid>\n\n    );\n  }\n}\n\nclass DirectoryElement extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    // Directory is an object, first element is the clean name then some dir info\n    const directory = this.props.directory;\n    // Send the clicked directory name back to update the intial fetch path\n    return (\n      <Grid item onClick={() => this.props.updatePathForward(directory[0])}>\n        <FolderIcon \n          width=\"100px\" \n          color=\"primary\" \n          className=\"element-icon\"\n        />\n        <p>{directory[0]}</p>\n      </Grid>\n\n    );\n  }\n}\n\n\nexport { FileElement, DirectoryElement }",["37","38"],{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","severity":1,"message":"44","line":1,"column":28,"nodeType":"45","messageId":"46","endLine":1,"endColumn":47},{"ruleId":"43","severity":1,"message":"47","line":2,"column":10,"nodeType":"45","messageId":"46","endLine":2,"endColumn":17},{"ruleId":"48","severity":1,"message":"49","line":27,"column":15,"nodeType":"50","endLine":27,"endColumn":121},{"ruleId":"51","severity":1,"message":"52","line":27,"column":78,"nodeType":"53","messageId":"54","endLine":27,"endColumn":98},{"ruleId":"55","severity":1,"message":"56","line":43,"column":13,"nodeType":"57","messageId":"58","endLine":43,"endColumn":61},{"ruleId":"59","severity":1,"message":"60","line":69,"column":19,"nodeType":"61","messageId":"62","endLine":69,"endColumn":21},{"ruleId":"63","severity":1,"message":"64","line":8,"column":3,"nodeType":"65","messageId":"66","endLine":10,"endColumn":4},{"ruleId":"67","severity":1,"message":"68","line":16,"column":48,"nodeType":"69","endLine":16,"endColumn":72},{"ruleId":"63","severity":1,"message":"64","line":26,"column":3,"nodeType":"65","messageId":"66","endLine":28,"endColumn":4},{"ruleId":"39","replacedBy":"70"},{"ruleId":"41","replacedBy":"71"},"no-native-reassign",["72"],"no-negated-in-lhs",["73"],"no-unused-vars","'useImperativeHandle' is defined but never used.","Identifier","unusedVar","'spacing' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-script-url","Script URL is a form of eval.","Literal","unexpectedScriptURL","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute",["72"],["73"],"no-global-assign","no-unsafe-negation"]
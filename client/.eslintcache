[{"/Users/owenmcpartlan/Desktop/programs/cpp/HomeBase/client/src/index.js":"1","/Users/owenmcpartlan/Desktop/programs/cpp/HomeBase/client/src/reportWebVitals.js":"2","/Users/owenmcpartlan/Desktop/programs/cpp/HomeBase/client/src/App.js":"3","/Users/owenmcpartlan/Desktop/programs/cpp/HomeBase/client/src/Components/SideNavigation.js":"4","/Users/owenmcpartlan/Desktop/programs/cpp/HomeBase/client/src/Components/plex.js":"5","/Users/owenmcpartlan/Desktop/programs/cpp/HomeBase/client/src/Components/FileContainer.js":"6","/Users/owenmcpartlan/Desktop/programs/cpp/HomeBase/client/src/Components/FileElements.js":"7"},{"size":1118,"mtime":1613274163471,"results":"8","hashOfConfig":"9"},{"size":362,"mtime":1610228331961,"results":"10","hashOfConfig":"9"},{"size":2056,"mtime":1613274163470,"results":"11","hashOfConfig":"9"},{"size":1878,"mtime":1613274163470,"results":"12","hashOfConfig":"9"},{"size":2596,"mtime":1613281232925,"results":"13","hashOfConfig":"9"},{"size":2242,"mtime":1611423625031,"results":"14","hashOfConfig":"9"},{"size":1219,"mtime":1613278928135,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18","usedDeprecatedRules":"19"},"8h71ip",{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"19"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"19"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"19"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"19"},"/Users/owenmcpartlan/Desktop/programs/cpp/HomeBase/client/src/index.js",["36"],"import React from 'react';\nimport SideBar from './Components/SideNavigation'\nimport Grid from '@material-ui/core/Grid';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Boost from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport { useHistory, Route,  Switch } from 'react-router';\nimport Plex from './Components/plex';\nimport { BrowserRouter } from 'react-router-dom';\n\n\nReactDOM.render(\n  <BrowserRouter>\n      <div className='main-container'>\n        <Grid container>\n          <Grid item xs={12} className='main-header'>\n            <p>header</p>\n          </Grid>\n        </Grid>\n        <Grid container>\n          <SideBar />\n          <Switch>\n            <Route path='/plex' component={Plex}/>\n            <Route path='/' component={Boost}/>\n          </Switch>\n        </Grid>\n      </div>\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["37","38"],"/Users/owenmcpartlan/Desktop/programs/cpp/HomeBase/client/src/reportWebVitals.js",[],"/Users/owenmcpartlan/Desktop/programs/cpp/HomeBase/client/src/App.js",["39","40","41","42","43"],"import React, { Component } from 'react';\nimport { BrowserRouter, Route, Router } from 'react-router-dom'\nimport SideBar from './Components/SideNavigation'\nimport FileContainer from './Components/FileContainer';\n\nimport Grid from '@material-ui/core/Grid';\n\nimport './App.css';\nimport { Redirect } from 'react-router-dom';\n\n\n\nexport default class Boost extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      apiResponded: false,\n      files: [],\n      filePath: \"\",\n    }\n  }\n\n  componentDidMount() {\n    this.fetchDirContents(\"/boost_lib\");\n  }\n\n\n  // Called on load and when an item is clicked. \n  // Checks the path on the server and responds with the contents and file information.\n  fetchDirContents(newPath) {\n    fetch(newPath)\n      .then(res => res.json())\n      .then(res => {\n        this.setState({\n          files: res,\n          apiResponded: true,\n          filePath: newPath\n        })\n      })\n\n  }\n\n\n\n  updatePathBackward(selectedDirectory) {\n    this.setState({ apiResponded: false })\n    // Find the selected directory in the filepoath\n    let newPathIndex = this.state.filePath.indexOf(selectedDirectory);\n    let newPath = this.state.filePath.substring(0, newPathIndex + selectedDirectory.length);\n    this.fetchDirContents(newPath);\n\n  }\n  // Append the desired directory to the end of the current path.\n  updatePathForward(selectedDirectory) {\n    this.setState({ apiResponded: false });\n    let newPath = `${this.state.filePath}/${selectedDirectory}`;\n    // Find the contents of the new path to display.\n    this.fetchDirContents(newPath);\n  }\n\n  render() {\n    return (\n      <Grid item xs={9} className='main-content'>\n        <p style={{ textAlign: 'center' }}>main content</p>\n\n        {this.state.apiResponded\n          ? <FileContainer\n            files={this.state.files}\n            updatePathBackward={this.updatePathBackward.bind(this)}\n            updatePathForward={this.updatePathForward.bind(this)}\n          />\n          : <p>Loading . . . </p>\n        }\n\n      </Grid>\n\n\n    );\n  }\n}\n","/Users/owenmcpartlan/Desktop/programs/cpp/HomeBase/client/src/Components/SideNavigation.js",["44","45","46"],"import CloudUploadSharpIcon from '@material-ui/icons/CloudUploadSharp';\nimport EmojiObjectsIcon from '@material-ui/icons/EmojiObjects';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItem from '@material-ui/core/ListItem';\nimport Divider from '@material-ui/core/Divider';\nimport WifiIcon from '@material-ui/icons/Wifi';\nimport TvIcon from '@material-ui/icons/Tv';\nimport List from '@material-ui/core/List';\nimport React, { Component } from 'react';\nimport { BrowserRouter, Route, Router } from 'react-router-dom';\n\nimport { withRouter } from 'react-router-dom';\n\nclass SideBar extends Component {\n  constructor(props) {\n    super(props)\n  }\n\n  RedirectUrl(url) {\n    this.props.history.push(url);\n    console.log(url);\n  }\n\n  render() {\n\n    return (\n      <div className=\"side-container\">\n        <Divider />\n        <BrowserRouter>\n          <List>\n            <ListItem button onClick={() => this.RedirectUrl('/')}>\n              <ListItemIcon><CloudUploadSharpIcon /></ListItemIcon>\n              <ListItemText primary={'Boost'} />\n            </ListItem>\n            <ListItem button onClick={() => this.RedirectUrl('/plex')}>\n              <ListItemIcon><TvIcon /></ListItemIcon>\n              <ListItemText primary={'Plex'} href=\"/plex\" />\n            </ListItem>\n            <ListItem button onClick={() => this.RedirectUrl('/proxy')}>\n              <ListItemIcon><WifiIcon /></ListItemIcon>\n              <ListItemText primary={'Proxy'} />\n            </ListItem>\n            <ListItem button onClick={() => this.RedirectUrl('/lighting')}>\n              <ListItemIcon><EmojiObjectsIcon /></ListItemIcon>\n              <ListItemText primary={'Lighting'} />\n            </ListItem>\n          </List>\n        </BrowserRouter>\n\n      </div>\n    )\n\n  }\n\n\n}\n\nexport default withRouter(SideBar)","/Users/owenmcpartlan/Desktop/programs/cpp/HomeBase/client/src/Components/plex.js",["47","48"],"/Users/owenmcpartlan/Desktop/programs/cpp/HomeBase/client/src/Components/FileContainer.js",["49","50","51","52","53","54"],"import React, { Component, useImperativeHandle } from 'react';\nimport { spacing } from '@material-ui/system/spacing'; \nimport Grid from '@material-ui/core/Grid';\nimport { DirectoryElement, FileElement } from './FileElements';\n\n\nexport default class FileContainer extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      files: this.props.files\n    }\n  }\n\n  updatePathForward(selectedDirectory) {\n    this.props.updatePathForward(selectedDirectory)\n  }\n\n  mapElements(elements, directoryPath) {\n    return (\n      <Grid container className=\"element-container\" >\n        {/* Filepath breadcrumbs. */}\n        <Grid container justify='center' >\n          { directoryPath.split('/').map((element, i) => {\n            return <Grid item key={i}>\n              <a onClick={() => this.props.updatePathBackward(element)} href='javascript:void(0)' className='file-path'>{element}</a>\n              {i !== directoryPath.split('/').length - 1\n                ? <span className='file-path-separator'>/</span>\n                : <span></span>\n              }\n\n            </Grid>\n          })} \n\n        </Grid>\n        <Grid \n          container \n          alignContent='flex-start'\n          className=\"element-body\"\n          >\n          {elements.map((element, i) => {\n            {/* xs = 3 will allow four items on each row */}\n            return <Grid \n                    item \n                    xs={3} \n                    style={{marginTop:40}} \n                    className=\"element-entry\" \n                    key={i} >\n              {/* Check what type of sytling to use for element */}\n              {element[1]['file-type'] === 'directory'\n                ? <DirectoryElement updatePathForward={this.updatePathForward.bind(this)} directory={element} />\n                : <FileElement file={element} />\n              }\n            </Grid>\n          })}\n        </Grid>\n      </Grid>\n    );\n\n  }\n\n\n  render() {\n    const dirPath = this.state.files['directory-path'];\n    const elements = Object.entries(this.state.files['elements']);\n    return (\n      <Grid container >\n        {elements != undefined\n          ? this.mapElements(elements, dirPath)\n          : <p></p>\n        }\n      </Grid>\n\n    );\n  }\n\n\n}\n\n","/Users/owenmcpartlan/Desktop/programs/cpp/HomeBase/client/src/Components/FileElements.js",["55","56","57"],"\nimport React, { Component } from 'react';\nimport DescriptionIcon from '@material-ui/icons/Description';\nimport FolderIcon from '@material-ui/icons/Folder';\nimport Grid from '@material-ui/core/Grid';\n\nclass FileElement extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    const file = this.props.file;\n    return (\n      <Grid item className=\"grid-item\" >\n        <DescriptionIcon className=\"file-icon\" className=\"element-icon\"/>\n        <p>{file[1]['file-name']}</p>\n        <p className='file-size'><small>{file[1]['file-size']} bytes</small></p>\n      </Grid>\n\n    );\n  }\n}\n\nclass DirectoryElement extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    // Directory is an object, first element is the clean name then some dir info\n    const directory = this.props.directory;\n    // Send the clicked directory name back to update the intial fetch path\n    return (\n      <Grid item onClick={() => this.props.updatePathForward(directory[0])}>\n        <FolderIcon\n          width=\"100px\"\n          color=\"primary\"\n          className=\"element-icon\"\n        />\n        <p>{directory[0]}</p>\n      </Grid>\n\n    );\n  }\n}\n\n\nexport { FileElement, DirectoryElement }\n",{"ruleId":"58","severity":1,"message":"59","line":9,"column":10,"nodeType":"60","messageId":"61","endLine":9,"endColumn":20},{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","replacedBy":"65"},{"ruleId":"58","severity":1,"message":"66","line":2,"column":10,"nodeType":"60","messageId":"61","endLine":2,"endColumn":23},{"ruleId":"58","severity":1,"message":"67","line":2,"column":25,"nodeType":"60","messageId":"61","endLine":2,"endColumn":30},{"ruleId":"58","severity":1,"message":"68","line":2,"column":32,"nodeType":"60","messageId":"61","endLine":2,"endColumn":38},{"ruleId":"58","severity":1,"message":"69","line":3,"column":8,"nodeType":"60","messageId":"61","endLine":3,"endColumn":15},{"ruleId":"58","severity":1,"message":"70","line":9,"column":10,"nodeType":"60","messageId":"61","endLine":9,"endColumn":18},{"ruleId":"58","severity":1,"message":"67","line":11,"column":25,"nodeType":"60","messageId":"61","endLine":11,"endColumn":30},{"ruleId":"58","severity":1,"message":"68","line":11,"column":32,"nodeType":"60","messageId":"61","endLine":11,"endColumn":38},{"ruleId":"71","severity":1,"message":"72","line":16,"column":3,"nodeType":"73","messageId":"74","endLine":18,"endColumn":4},{"ruleId":"75","severity":1,"message":"76","line":21,"column":17,"nodeType":"77","messageId":"78","endLine":21,"endColumn":19},{"ruleId":"79","severity":1,"message":"80","line":42,"column":13,"nodeType":"81","messageId":"82","endLine":42,"endColumn":61},{"ruleId":"58","severity":1,"message":"83","line":1,"column":28,"nodeType":"60","messageId":"61","endLine":1,"endColumn":47},{"ruleId":"58","severity":1,"message":"84","line":2,"column":10,"nodeType":"60","messageId":"61","endLine":2,"endColumn":17},{"ruleId":"85","severity":1,"message":"86","line":27,"column":15,"nodeType":"87","endLine":27,"endColumn":121},{"ruleId":"88","severity":1,"message":"89","line":27,"column":78,"nodeType":"90","messageId":"91","endLine":27,"endColumn":98},{"ruleId":"79","severity":1,"message":"80","line":43,"column":13,"nodeType":"81","messageId":"82","endLine":43,"endColumn":61},{"ruleId":"75","severity":1,"message":"92","line":69,"column":19,"nodeType":"77","messageId":"78","endLine":69,"endColumn":21},{"ruleId":"71","severity":1,"message":"72","line":8,"column":3,"nodeType":"73","messageId":"74","endLine":10,"endColumn":4},{"ruleId":"93","severity":1,"message":"94","line":16,"column":48,"nodeType":"95","endLine":16,"endColumn":72},{"ruleId":"71","severity":1,"message":"72","line":26,"column":3,"nodeType":"73","messageId":"74","endLine":28,"endColumn":4},"no-unused-vars","'useHistory' is defined but never used.","Identifier","unusedVar","no-native-reassign",["96"],"no-negated-in-lhs",["97"],"'BrowserRouter' is defined but never used.","'Route' is defined but never used.","'Router' is defined but never used.","'SideBar' is defined but never used.","'Redirect' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'useImperativeHandle' is defined but never used.","'spacing' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-script-url","Script URL is a form of eval.","Literal","unexpectedScriptURL","Expected '!==' and instead saw '!='.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-global-assign","no-unsafe-negation"]